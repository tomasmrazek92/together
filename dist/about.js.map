{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/about.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Global storage\nlet globalJobs = [];\nlet globalDepartments = [];\nlet templateElement = null;\n\n// Initialize FSAttributes\nwindow.fsAttributes = window.fsAttributes || [];\n\n// Load all the data first\nasync function loadAllData() {\n  try {\n    // console.log('1. Loading API data...');\n    const products = await fetchProducts();\n    globalJobs = products.jobs;\n\n    // Extract unique departments\n    const departments = new Set();\n    globalJobs.forEach((job) => {\n      if (job.departments && job.departments.length > 0) {\n        departments.add(job.departments[0].name);\n      }\n    });\n    globalDepartments = Array.from(departments);\n\n    console.log('2. Data loaded:', { jobs: globalJobs.length, departments: globalDepartments });\n    return true;\n  } catch (error) {\n    console.error('Error loading data:', error);\n    return false;\n  }\n}\n\n// Main initialization sequence\nasync function initializeSequence() {\n  try {\n    // 1. Load the data first\n    await loadAllData();\n\n    // 2. Manually initialize CMS Load\n    // console.log('3. Initializing CMS Load...');\n    await window.fsAttributes.cmsload.init();\n\n    // 3. Set up CMS Load handler\n    window.fsAttributes.push([\n      'cmsload',\n      async (listInstances) => {\n        // console.log('4. CMS Load callback triggered');\n        const [listInstance] = listInstances;\n\n        // Save template\n        const [firstItem] = listInstance.items;\n        templateElement = firstItem.element.cloneNode(true);\n\n        // Clear and create new items\n        listInstance.clearItems();\n\n        const newItems = globalJobs.map((product) => createItem(product, templateElement));\n\n        // Update items\n        await listInstance.addItems(newItems);\n\n        // Update filter menu\n        updateFilterMenu(globalDepartments);\n\n        // 4. Initialize CMS Filter\n        // console.log('5. Initializing CMS Filter...');\n        await window.fsAttributes.cmsfilter.init();\n\n        // Set up CMS Filter handler\n        window.fsAttributes.push([\n          'cmsfilter',\n          (filterInstances) => {\n            // console.log('6. CMS Filter initialized');\n            const [filterInstance] = filterInstances;\n          },\n        ]);\n\n        $(\"input[type='radio'][name='filter']\").change(function () {\n          const section = $(this).closest('section');\n\n          // Remove 'active' class from all labels in this section\n          section.find(\"[fs-cmsfilter-element='clear']\").removeClass('fs-cmsfilter_active');\n\n          // Add 'active' class to the parent label of the checked radio button in this section\n          section\n            .find(\"input[type='radio'][name='filter']:checked\")\n            .closest(\"[fs-cmsfilter-element='clear']\")\n            .addClass('fs-cmsfilter_active');\n        });\n\n        // Show content\n        document.querySelector('[job-list]').style.opacity = '1';\n      },\n    ]);\n  } catch (error) {\n    console.error('Error in initialization sequence:', error);\n  }\n}\n\n/**\n * Updates the filter menu with new department options\n */\nfunction updateFilterMenu(departments) {\n  const filterMenu = document.querySelector('[fs-cmsstatic-element=\"list\"]');\n  if (!filterMenu) return;\n\n  filterMenu.innerHTML = '';\n\n  departments.forEach((dept, index) => {\n    const listItem = document.createElement('div');\n    listItem.className = 'filters-item w-dyn-item';\n    listItem.setAttribute('role', 'listitem');\n\n    listItem.innerHTML = `\n      <label data-element=\"filter\" class=\"tab w-radio\">\n        <input type=\"radio\" \n          data-name=\"filter\" \n          id=\"radio-2-${index}-${index}\" \n          name=\"filter\" \n          class=\"w-form-formradioinput hide w-radio-input\" \n          value=\"${dept}\">\n        <span fs-cmsfilter-field=\"category\" \n          class=\"text-size-navigation w-form-label\" \n          for=\"radio-2\">${dept}</span>\n      </label>\n    `;\n\n    filterMenu.appendChild(listItem);\n  });\n}\n\n/**\n * Fetches jobs from the API\n */\nasync function fetchProducts() {\n  try {\n    const response = await fetch(\n      'https://boards-api.greenhouse.io/v1/boards/togetherai/jobs?content=true'\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching jobs:', error);\n    return { jobs: [] };\n  }\n}\n\n/**\n * Creates an item from the template element\n */\nfunction createItem(product, templateElement) {\n  const newItem = templateElement.cloneNode(true);\n\n  const label = newItem.querySelector('[data-label]');\n  const title = newItem.querySelector('[data-heading]');\n  const location = newItem.querySelector('[data-location]');\n  const link = newItem.querySelector('[data-button]');\n\n  if (label) label.textContent = product.departments[0].name;\n  if (title) title.textContent = product.title;\n  if (location) location.textContent = product.location.name;\n  if (link) {\n    link.setAttribute('href', product.absolute_url);\n    link.target = '_blank';\n  }\n\n  return newItem;\n}\n\n// Start the sequence\ninitializeSequence();\n"],
  "mappings": "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",
  "names": ["templateElement", "location"]
}
