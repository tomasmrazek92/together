{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/blue-ball.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// Inject the ball\n$('body').append('<div id=\"follow-bubble\"><span class=\"heading-style-h8\">View</span></div>');\n\n// Blue logic\nconst BLOG_ITEM_SELECTOR = '.list-b.w-dyn-items .w-dyn-item';\nconst LINE_LEFT_OFFSET = 140;\nconst BUBBLE_SIZE = 196;\nconst fromHTML = (html, trim = true) => {\n  // Process the HTML string.\n  html = trim ? html.trim() : html;\n  if (!html) return null;\n\n  // Then set up a new template element.\n  const template = document.createElement('template');\n  template.innerHTML = html;\n  const result = template.content.children;\n\n  // Then return either an HTMLElement or HTMLCollection,\n  // based on whether the input HTML had one or more roots.\n  if (result.length === 1) return result[0];\n  return result;\n};\n\nconst EDGE_WARP_OFFSET = 170;\nconst MAX_LINE_RANGE = 64;\n\nconst bubbleEl = document.getElementById('follow-bubble');\n\n/* active section state */\nlet activeBlogSection = null;\n\n/* cursor state */\nlet scrollPosition = [0, 0];\nconst setCursorPosition = (e) => {\n  if (e.clientX && e.clientY) {\n    // keeping mouse position in memory because we don't receive it during scroll\n    scrollPosition = [e.clientX, e.clientY];\n  }\n};\n\n/* line utilites */\nconst getSvgLinesOfEl = (blogSection) => {\n  const svgLineTop = blogSection.querySelector('.blog-item-line-path');\n  const svgLineBottom = blogSection.nextElementSibling?.querySelector('.blog-item-line-path');\n\n  return {\n    top: svgLineTop,\n    bottom: svgLineBottom,\n  };\n};\n\nconst resetSvgLinesOfEl = (blogSection) => {\n  if (blogSection) {\n    const { top, bottom } = getSvgLinesOfEl(blogSection);\n    if (top) {\n      top.setAttribute('d', dCurve(32));\n    }\n    if (bottom) {\n      bottom.setAttribute('d', dCurve(32));\n    }\n  }\n};\n\nconst getBlogItemMidpoint = (blogItem) => {\n  const blogItemRect = blogItem.getBoundingClientRect();\n  const blogItemHead = blogItem.querySelector('.list-b_head');\n  const blogItemHeadRect = blogItemHead.getBoundingClientRect();\n  const lineMidpoint = (blogItemHeadRect.width - LINE_LEFT_OFFSET) / 2;\n  return lineMidpoint;\n};\n\nconst setActiveSection = () => {\n  const pointElement = document.elementFromPoint(...scrollPosition);\n  if (pointElement) {\n    const blogItemElement = pointElement.closest(BLOG_ITEM_SELECTOR);\n    if (blogItemElement) {\n      if (blogItemElement !== activeBlogSection) {\n        resetSvgLinesOfEl(activeBlogSection);\n        activeBlogSection = blogItemElement;\n      }\n    } else {\n      resetSvgLinesOfEl(activeBlogSection);\n      activeBlogSection = null;\n    }\n  }\n\n  if (activeBlogSection === null) {\n    bubbleEl.style.opacity = 0;\n    bubbleEl.style.transform = 'scale(0.8)';\n  }\n};\n\nconst reposition = (e) => {\n  if (window.innerWidth < 992) {\n    bubbleEl.style.opacity = 0;\n    bubbleEl.style.transform = 'scale(0.8)';\n    return;\n  }\n\n  setCursorPosition(e);\n  setActiveSection();\n\n  if (activeBlogSection) {\n    const containerRect = activeBlogSection.getBoundingClientRect();\n\n    const cursorPositionWithinContainer = scrollPosition[1] - containerRect.top;\n\n    const cursorPositionRelative = cursorPositionWithinContainer / containerRect.height;\n\n    // top line curving\n    const positionRelativeTop =\n      Math.min(cursorPositionWithinContainer, EDGE_WARP_OFFSET) / EDGE_WARP_OFFSET;\n    const curvePositionTop = Math.round(Math.min(positionRelativeTop, 0.5) * MAX_LINE_RANGE);\n\n    const svgLineTop = activeBlogSection.querySelector('.blog-item-line-path');\n    svgLineTop.setAttribute('d', dCurve(curvePositionTop));\n\n    // bottom line curving\n\n    const positionRelativeBottom =\n      Math.min(Math.abs(cursorPositionWithinContainer - containerRect.height), EDGE_WARP_OFFSET) /\n      EDGE_WARP_OFFSET;\n\n    const curvePositionBottom = Math.round(\n      (1 - Math.min(positionRelativeBottom, 0.5)) * MAX_LINE_RANGE\n    );\n\n    const svgLineBottom =\n      activeBlogSection.nextElementSibling?.querySelector('.blog-item-line-path');\n    if (svgLineBottom) {\n      svgLineBottom.setAttribute('d', dCurve(curvePositionBottom));\n    }\n\n    const extraOffset = (cursorPositionRelative - 0.5) * 30;\n\n    // horizontal position\n    const blogItemMidpoint = getBlogItemMidpoint(activeBlogSection);\n\n    document\n      .querySelectorAll('.blog-item-line')\n      .forEach((item) => (item.style.left = `${blogItemMidpoint + LINE_LEFT_OFFSET}px`));\n\n    bubbleEl.style.left = `${\n      containerRect.left + blogItemMidpoint + LINE_LEFT_OFFSET - BUBBLE_SIZE / 2 + 2\n    }px`;\n    bubbleEl.style.top = `${\n      scrollPosition[1] - BUBBLE_SIZE * cursorPositionRelative + extraOffset\n    }px`;\n\n    setTimeout(() => {\n      bubbleEl.style.opacity = 1;\n      bubbleEl.style.transform = 'scale(1)';\n    }, 100);\n  }\n};\n\n/**\n * Initialize\n */\n\ndocument.addEventListener('mousemove', reposition);\ndocument.addEventListener('scroll', reposition);\ndocument.addEventListener('resize', reposition);\n\nconst dCurve = (yPosition) =>\n  `M0 32C100 32 125 ${yPosition} 200 ${yPosition}C275 ${yPosition} 300 32 400 32`;\n\nconst initializeHoverItems = () => {\n  const hoverItems = document.querySelectorAll(BLOG_ITEM_SELECTOR);\n\n  hoverItems.forEach((blogItem) => {\n    const svgLine = fromHTML(`\n<svg\nclass=\"blog-item-line\"\nwidth=\"400\"\nheight=\"64\"\nviewBox=\"0 0 400 64\"\nfill=\"var(--light-gray)\"\nxmlns=\"http://www.w3.org/2000/svg\"\n>\n<rect width=\"100%\" height=\"100%\" fill=\"var(--light-gray)\"/>\n<path\nclass=\"blog-item-line-path\"\nd=\"M0 32C100 32 100 32 200 32C300 32 300 32 400 32\"\nstroke=\"var(--medium-gray)\"\n/>\n  </svg>`);\n    blogItem.appendChild(svgLine);\n  });\n};\n\n// Init\ninitializeHoverItems();\n\nwindow.fsAttributes = window.fsAttributes || [];\nwindow.fsAttributes.push([\n  'cmsload',\n  (listInstances) => {\n    console.log('cmsload Successfully loaded!');\n\n    // The callback passes a `listInstances` array with all the `CMSList` instances on the page.\n    const [listInstance] = listInstances;\n\n    // The `renderitems` event runs whenever the list renders items after switching pages.\n    listInstance.on('renderitems', (renderedItems) => {\n      initializeHoverItems();\n    });\n  },\n]);\n"],
  "mappings": "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",
  "names": []
}
